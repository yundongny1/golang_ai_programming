This is the repository for MSDS431 Week 7 Assignment: An Exercise in Automated Programming. We examine the possiblity of using automated code genereation from using generate from Golang standard library, AI-assisted programming through GitHub Copilot, and using AI-generated code from ChatGPT. Examining go generate reveals to us that it could have been used to write many reptitive code, such as the unit tests written. Although each unit tests use different data to test each Anascombe model, the rest of the unit test code could have been generated using Go generate. It is worth noting that there was only 4 unit tests needed for this program, but for future usage where it may require many unit tests, the go generate function would be extremely useful.

GitHub Copilot is a useful tool in that it saves coding time by offering suggestions and helping coders remember the exact syntax for a programming langauge or a concept that they may need to search online. For example, a python programmer that hasn't visisted Golang in a long time or vice versa will need to take some time to remember the exact syntax for writing a function or a for loop in another programming language. By offering live suggestions that you can choose to accept or decline, GitHub Copilot makes coding take less effort and helps save time. There are other functionalities such as collaboration that seems very useful in a team environment. In a working team, being able to communicate with questions and answers is extremely useful.

To test the results and computation time between R, Python, and Golang, we will now be using ChatGPT to generate code that will complete the assignment for us.

The conversations with ChatGPT for this assignment will be included in the text file, 'conversation.txt.'
ChatGPT offers verbose code, but has small errors that ultimately fails to complete the program. However, if paired with an someone who knows the language enough to fix the error and use the code generated by ChatGPT, it is extremely powerful. It saves the most time out of the three methods, and requires the least amount of effort from the users. Using ChatGPT is like selling a cake baked by a machine and putting the cherry on the top, while GitHub Copilot and Go generate are simply tools to help human write code better.

Why are we paying junior Go programmers a base salary of $120 thousand a year?  Why are we paying senior software engineers more than $175 thousand? From what I read about Go code generators and GitHub Copilot, we should be able to reduce development costs substantially, maybe by as much as 50 percent. We can use Go to generate code. We can pair every junior programmer with a robot coder. We can insist that every programmer use GitHub Copilot. Let's implement automation in the software development process whenever and wherever possible. We either cut personnel costs or go for another round of venture capital funding. I say we cut costs.

Go code generators and GitHub CoPilot, and ChatGPT cannot replace senior software engineers. While these tools can be used to reduce the time and effort to write code, and potentially reduce the number of junior programmers needed, it requires human experience, knowledge, and wisdom to be able to write the right code. Reducing the number of junior programmers also comes at a risk of reducing the number of senior software engieneers in the firm, which are an invaluable asset.
